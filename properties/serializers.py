from rest_framework import serializers
from .models import Property


class PropertySerializer(serializers.ModelSerializer):
    """
    โ Serializer ูุชุญููู ุจูุงูุงุช ุงูุนูุงุฑ ุฅูู JSON ูุงูุนูุณ.
    """

    formatted_price = serializers.SerializerMethodField()  # โ ุญูู ูุฎุตุต ูุนุฑุถ ุงูุณุนุฑ ุจุตูุบุฉ ููุณูุฉ
    full_description = serializers.SerializerMethodField()  # โ ุญูู ูุฎุตุต ููุตู ุงูุนูุงุฑ ุชูุตููููุง
    currency = serializers.ChoiceField(choices=[("EGP", "EGP"), ("USD", "USD")], default="EGP")  # โ ุฏุนู ุงูุนููุงุช

    class Meta:
        model = Property
        fields = '__all__'  # โ ุชุถููู ุฌููุน ุงูุญููู
        read_only_fields = ('id', 'created_at', 'updated_at')  # โ ุฌุนู ุงูุญููู ุงูุฃุณุงุณูุฉ ูููุฑุงุกุฉ ููุท
        extra_kwargs = {
            'property_type': {'help_text': "ููุน ุงูุนูุงุฑ (ูููุงุ ุดูุฉุ ูุญู ุชุฌุงุฑูุ ุฅูุฎ)"},
            'location': {'help_text': "ุงููููุน ุงูุฌุบุฑุงูู ููุนูุงุฑ"},
            'developer': {'help_text': "ุงุณู ุงููุทูุฑ ุงูุนูุงุฑู"},
            'description': {'help_text': "ุชูุงุตูู ุฅุถุงููุฉ ุญูู ุงูุนูุงุฑ"},
            'area': {'help_text': "ุงููุณุงุญุฉ ุจุงููุชุฑ ุงููุฑุจุน"},
            'outdoor_area': {'help_text': "ุงููุณุงุญุฉ ุงูุฎุงุฑุฌูุฉ ุฅู ูุฌุฏุช"},
            'price': {'help_text': "ุงูุณุนุฑ ุงูุฅุฌูุงูู ุจุงูุนููุฉ ุงููุฎุชุงุฑุฉ (EGP ุฃู USD)"},
            'payment_method': {'help_text': "ุทุฑููุฉ ุงูุฏูุน (ูุงุด ุฃู ุฃูุณุงุท)"},
            'delivery_date': {'help_text': "ุชุงุฑูุฎ ุชุณููู ุงูุนูุงุฑ"},
            'maintenance_value': {'help_text': "ูููุฉ ุงูุตูุงูุฉ ุงูุณูููุฉ ุจุงูุนููุฉ ุงููุฎุชุงุฑุฉ"},
        }

    def get_formatted_price(self, obj):
        """
        โ ุฅุฑุฌุงุน ุงูุณุนุฑ ุจุตูุบุฉ ููุณูุฉ ุจูุงุกู ุนูู ุงูุนููุฉ ุงููุฎุชุงุฑุฉ.
        """
        currency_symbol = "ุฌ.ู" if obj.currency == "EGP" else "$"
        return f"{currency_symbol}{obj.price:,.2f}"

    def get_full_description(self, obj):
        """
        โ ุฅูุดุงุก ูุตู ุชูุตููู ููุนูุงุฑ ูุดูู ุฃูู ุงููุนูููุงุช.
        """
        currency_symbol = "ุฌ.ู" if obj.currency == "EGP" else "$"
        description = (
            f"Type: {obj.property_type} | Location: {obj.location} | "
            f"Area: {obj.area} sqm | Price: {currency_symbol}{obj.price:,.2f} | "
            f"Developer: {obj.developer} | Delivery: {obj.delivery_date}"
        )
        if obj.outdoor_area:
            description += f" | Outdoor Area: {obj.outdoor_area} sqm"
        return description

    def validate_price(self, value):
        """
        โ ุงูุชุญูู ูู ุฃู ุงูุณุนุฑ ุฃูุจุฑ ูู ุตูุฑ.
        """
        if value <= 0:
            raise serializers.ValidationError("๐ฐ ุงูุณุนุฑ ูุฌุจ ุฃู ูููู ุฃูุจุฑ ูู ุงูุตูุฑ.")
        return value

    def validate_area(self, value):
        """
        โ ุงูุชุญูู ูู ุฃู ุงููุณุงุญุฉ ุฃูุจุฑ ูู ุตูุฑ.
        """
        if value <= 0:
            raise serializers.ValidationError("๐ ุงููุณุงุญุฉ ูุฌุจ ุฃู ุชููู ุฃูุจุฑ ูู ุงูุตูุฑ.")
        return value
